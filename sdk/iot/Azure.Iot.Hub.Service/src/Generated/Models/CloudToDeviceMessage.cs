// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Iot.Hub.Service.Models
{
    /// <summary> Parameters to send on a cloud to device message to the device. </summary>
    public partial class CloudToDeviceMessage
    {
        /// <summary> Initializes a new instance of CloudToDeviceMessage. </summary>
        public CloudToDeviceMessage()
        {
        }

        /// <summary> Initializes a new instance of CloudToDeviceMessage. </summary>
        /// <param name="messageId"> Unique identifier for the C2D message being sent. </param>
        /// <param name="destination"> Destination of the message. </param>
        /// <param name="messagePayload"> Payload. </param>
        /// <param name="messageSchema"> The schema of the message payload content. </param>
        /// <param name="contentType"> The content type of the message payload. </param>
        /// <param name="contentEncoding"> The content encoding type of the message payload. </param>
        /// <param name="creationTimeUtc"> Custom date property set by the originator of the message. </param>
        /// <param name="expirationTimeUtc"> The time when this message is considered expired. </param>
        /// <param name="correlationId"> Used in message responses and feedback. </param>
        /// <param name="acknowledgment"> Indicates whether consumption or expiration of the message should post data to the feedback queue. For explanation on possible values, see https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messages-c2d#message-feedback. </param>
        /// <param name="applicationProperties"> Collection of user-defined properties on the message. </param>
        internal CloudToDeviceMessage(string messageId, string destination, object messagePayload, string messageSchema, string contentType, string contentEncoding, DateTimeOffset? creationTimeUtc, DateTimeOffset? expirationTimeUtc, string correlationId, CloudToDeviceMessageAcknowledgment? acknowledgment, IDictionary<string, object> applicationProperties)
        {
            MessageId = messageId;
            Destination = destination;
            MessagePayload = messagePayload;
            MessageSchema = messageSchema;
            ContentType = contentType;
            ContentEncoding = contentEncoding;
            CreationTimeUtc = creationTimeUtc;
            ExpirationTimeUtc = expirationTimeUtc;
            CorrelationId = correlationId;
            Acknowledgment = acknowledgment;
            ApplicationProperties = applicationProperties;
        }

        /// <summary> Unique identifier for the C2D message being sent. </summary>
        public string MessageId { get; set; }
        /// <summary> Destination of the message. </summary>
        public string Destination { get; set; }
        /// <summary> Payload. </summary>
        public object MessagePayload { get; set; }
        /// <summary> The schema of the message payload content. </summary>
        public string MessageSchema { get; set; }
        /// <summary> The content type of the message payload. </summary>
        public string ContentType { get; set; }
        /// <summary> The content encoding type of the message payload. </summary>
        public string ContentEncoding { get; set; }
        /// <summary> Custom date property set by the originator of the message. </summary>
        public DateTimeOffset? CreationTimeUtc { get; set; }
        /// <summary> The time when this message is considered expired. </summary>
        public DateTimeOffset? ExpirationTimeUtc { get; set; }
        /// <summary> Used in message responses and feedback. </summary>
        public string CorrelationId { get; set; }
        /// <summary> Indicates whether consumption or expiration of the message should post data to the feedback queue. For explanation on possible values, see https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messages-c2d#message-feedback. </summary>
        public CloudToDeviceMessageAcknowledgment? Acknowledgment { get; set; }
        /// <summary> Collection of user-defined properties on the message. </summary>
        public IDictionary<string, object> ApplicationProperties { get; set; }
    }
}

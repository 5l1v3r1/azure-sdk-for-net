// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Iot.Hub.Service.Models
{
    /// <summary> The feedback response containing details of the final state of sent messages. </summary>
    public partial class MessageFeedbackBatch
    {
        /// <summary> Initializes a new instance of MessageFeedbackBatch. </summary>
        internal MessageFeedbackBatch()
        {
        }

        /// <summary> Initializes a new instance of MessageFeedbackBatch. </summary>
        /// <param name="enqueuedTime"> A timestamp that indicates when the feedback message was received by the hub. </param>
        /// <param name="userId"> The IoT Hub name, from where the messages are sent. </param>
        /// <param name="lockToken"> The lock token obtained when the message feedback was received. It is used for completing/ abandoning a feedback batch. </param>
        /// <param name="messageResult"> List containing details of each message feedback result received. </param>
        internal MessageFeedbackBatch(DateTimeOffset? enqueuedTime, string userId, string lockToken, IReadOnlyList<CloudToDeviceMessageResult> messageResult)
        {
            EnqueuedTime = enqueuedTime;
            UserId = userId;
            LockToken = lockToken;
            MessageResult = messageResult;
        }

        /// <summary> A timestamp that indicates when the feedback message was received by the hub. </summary>
        public DateTimeOffset? EnqueuedTime { get; }
        /// <summary> The IoT Hub name, from where the messages are sent. </summary>
        public string UserId { get; }
        /// <summary> The lock token obtained when the message feedback was received. It is used for completing/ abandoning a feedback batch. </summary>
        public string LockToken { get; }
        /// <summary> List containing details of each message feedback result received. </summary>
        public IReadOnlyList<CloudToDeviceMessageResult> MessageResult { get; }
    }
}
